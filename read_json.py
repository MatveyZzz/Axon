import json


def load_json(path: str) -> list[dict[str, any]]:
    """–ß–∏—Ç–∞–µ—Ç JSON —Ñ–∞–π–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π.
       –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."""
    try:
        with open(path, 'r', encoding='utf-8') as f:
            data = json.load(f)
            if isinstance(data, list):
                return data
            raise ValueError("–û–∂–∏–¥–∞–ª—Å—è —Å–ø–∏—Å–æ–∫ –≤ –∫–æ—Ä–Ω–µ JSON.")
    except FileNotFoundError:
        return []
    except json.JSONDecodeError as e:
        raise RuntimeError(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON: {e}") from e


read = load_json('data/data.json')


def topic_2_message(message, file=None):
    if file is None:
        file = read

    message_lower = message.lower()
    for item in file:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–µ–≥–∏
        for tag in item.get("tags", []):
            if tag.lower() in message_lower:
                return item

    # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏
    return None


def answer(message):
    result = topic_2_message(message, read)
    if result:
        return (
            f"üî¨ {result['title']}\n\n"
            f"üí° {result['summary']}\n\n"
            f"üöÄ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ: {result['application']}\n\n"
            f"–ò—Å—Ç–æ—á–Ω–∏–∫: {result['source']}"
        )
    else:
        return "ü§î –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –Ω–∞—à—ë–ª –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –ø–æ —ç—Ç–æ–π —Ç–µ–º–µ. –ü–æ–ø—Ä–æ–±—É–π –∑–∞–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∏–Ω–∞—á–µ."
